from seaborn import load_dataset
dfdi = load_dataset("diamonds")
dfdi.head()

##Convert cateogrical columns into numerical columns with the corresponding category codes
import pandas as pd

dfdi.cut = pd.Categorical(dfdi.cut) 
dfdi.color = pd.Categorical(dfdi.color) 
dfdi.clarity = pd.Categorical(dfdi.clarity) 

dfdi.cut = dfdi.cut.cat.codes  
dfdi.color = dfdi.color.cat.codes
dfdi.clarity = dfdi.clarity.cat.codes

##define the two variables X as a feature dataset and y as a target dataset
features = list(dfdi.columns)
features.remove("price")

target = "price"

X = dfdi[features]
y = dfdi[target]

##Split X and y into two training datasets X_train and y_train and two test datasets X_text and y_test
from sklearn.model_selection import train_test_split

X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=0)

##new linear regression model and fit the model using the two training datasets
from sklearn.linear_model import LinearRegression

lr=LinearRegression()

lr.fit(X_train, y_train)

##Get the training score and test score
trainingscore = lr.score(X_train, y_train)
testscore = lr.score(X_test, y_test)

print(trainingscore)
print(testscore)

##Setting up features to use to predict with my model
d = {"carat": 0.7,
     "cut": 4,
     "color": 1,
     "clarity": 5,
     "depth": 62.4,
     "table": 60.0,
     "x": 5.57,
     "y": 5.61,
     "z": 3.49}

new_diamond = [d["carat"], d["cut"], d["color"], d["clarity"], d["depth"], d["table"], d["x"], d["y"], d["z"]]
X_new = [new_diamond]

##prediction based on model
lr.predict(X_new)
